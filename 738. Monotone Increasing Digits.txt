class Solution {
public:
    int monotoneIncreasingDigits(int n) {
        string s = intToString(n);
        int len = s.length();
        int probIndex = len;
        for (int i = 1; i < len; i++){
            if(s[i] < s[i -1] && probIndex == len){
                probIndex = i - 1;
                break;
            }
        }
    
        int lowerBound = probIndex;
        while (lowerBound >= 0 && s[probIndex] == s[lowerBound]){
            lowerBound--;
        }
        
        probIndex = lowerBound + 1;
        
        s[probIndex] = s[probIndex] - 1;
        
        for (int i = probIndex + 1; i < len; i++){
            s[i] = '9';
        }
        
        return strToInt(s);
        
    }
    
    int strToInt(string s){
        int len = s.length();
        int ans = 0;
        
        for (int i = 0; i < len; i++){
            ans = ans * 10 + (s[i] - 48);    
        }
        
        return ans;
    }
    
    string intToString(int n){
        string ans = "";
        if (n == 0) return "0";
        
        while(n != 0){
            ans.push_back(n % 10 + 48);
            n = n / 10;
        }
        
        reverse(ans.begin(), ans.end());
        
        return ans;
    }
};