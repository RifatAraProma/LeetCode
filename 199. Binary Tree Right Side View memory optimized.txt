/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int>rightNodes;
        vector<vector<int>>levels(102);
        updateLevel(rightNodes, root, 0);
        
        return rightNodes;
    }
    
    void updateLevel(vector<int> &rightNodes, TreeNode* source, int l){
        if (source == NULL) return;
        
        if (l == rightNodes.size())
            rightNodes.push_back(source->val);
        
        updateLevel(rightNodes, source->right, l + 1);
        updateLevel(rightNodes, source->left, l + 1);
        
        return;
    }
};