class Solution {
public:
    int getMaxLen(vector<int>& nums) {
        nums.push_back(0);
        int len = nums.size();
        int ans = 0;
        vector<int>temp;
        for (int i = 0; i < len; i++){
            if(nums[i] == 0){
                ans = max(ans, maxSubarrayCalc(temp));
                temp.clear();
            }
            else{
                temp.push_back(nums[i]);
            }
        }
        
        return ans;
    }
    
    int maxSubarrayCalc(vector<int>& nums){
        int ans = -1;
        int len = nums.size();
        bool neg = false;
        int firstNeg = -1;
        int lastNeg = -1;
        
        for (int i = 0; i < len; i++){
            if (nums[i] < 0){
                neg = !neg;
                if (firstNeg == -1) firstNeg = i;
                lastNeg = i;
            }
        }
        
        ans = neg == false ? len : max (lastNeg, len - firstNeg - 1);
        
        return ans;
    }
};