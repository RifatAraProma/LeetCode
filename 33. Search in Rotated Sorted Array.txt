class Solution {
public:
    int search(vector<int>& nums, int target) {
        int len = nums.size();
        int maxNumberIndex = len - 1;
        int high = len - 1;
        int low = 0;
        
        while (low <= high){
            int mid = (low + high) / 2;
            if (nums[mid] <= nums[len - 1]){
                high = mid - 1;
            }
            else{
                maxNumberIndex = mid;
                low = mid + 1;
            }
            
        }

        int output = binarySearch(nums, 0, maxNumberIndex, target);
        
        if (output == -1) output = binarySearch(nums, maxNumberIndex + 1, len - 1, target);
        
        return output;
        
    }
    
    int binarySearch(vector<int>& nums, int low, int high, int target){
        while(low <= high){
            int mid = (low + high) / 2;
            
            if (nums[mid] == target) return mid;
            else if (nums[mid] < target){
                low = mid + 1;
            }
            else{
                high = mid - 1;
            }
        }
        
        return -1;
    }
};