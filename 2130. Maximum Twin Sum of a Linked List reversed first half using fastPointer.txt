/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int pairSum(ListNode* head) {
        ListNode* curr = head;
        ListNode* prev = NULL;
        ListNode* next;
        ListNode* fastNode = head;
        int maxSum = -1;
        
        while(fastNode != NULL){
            fastNode = fastNode->next->next;
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        
        while(prev != NULL){
            maxSum = max(maxSum, prev->val + curr->val);
            prev = prev->next;
            curr = curr->next;
        }
        
        return maxSum;
    }
    
};