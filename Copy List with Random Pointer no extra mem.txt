/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        Node* prevCopy = NULL;
        Node* newHead =  NULL;
        Node* curr = head;
        Node* currCopy;

        
        while(curr != NULL){
            currCopy = new Node(curr->val);
            
            if(newHead == NULL) newHead= currCopy;
            
            Node* next = curr->next;
            curr->next = currCopy;
            currCopy->next = next;
            curr = next;
        }
        
        curr = head;
        
        while(curr != NULL){
            if(curr->random)
                curr->next->random = curr->random->next;
            
            curr = curr->next->next;
        }
        
        currCopy = newHead;
        curr = head;
        
        while(curr != NULL){
            if(curr->next)
                curr->next = curr->next->next;
            if(currCopy->next)
                currCopy->next = currCopy->next->next;
            
            curr = curr->next;
            currCopy = currCopy->next;
        }
        
        return newHead;
    }
};