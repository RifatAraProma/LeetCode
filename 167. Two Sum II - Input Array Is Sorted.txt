class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int len = numbers.size();
        vector<int>outputIndex;
        
        for (int i = 0; i < len - 1; i++){
            int index = binarySearch(numbers, i + 1, len - 1, target - numbers[i]);

            if(numbers[index] == target -  numbers[i]){
                outputIndex.push_back(i + 1);
                outputIndex.push_back(index + 1);
                break;
            }
        }
        
        return outputIndex;
        
    }
    
    int binarySearch(vector<int>&numbers, int low, int high, int target){
        int mid;

        while (low<=high){
            mid = (low + high) / 2;
            
            if (target < numbers[mid]){
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }
        
        return low - 1;
        
    }
    
    
};