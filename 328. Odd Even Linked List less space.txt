/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if (head == NULL || head->next == NULL) return head;
        ListNode* currOdd = head;
        ListNode* currEven = head->next;
        ListNode* headEven = currEven;
        
        while(currOdd->next != NULL && currEven->next != NULL){
            currOdd->next = currOdd->next->next;    
            currEven->next = currOdd->next->next;
            currOdd = currOdd->next;
            currEven = currEven->next;
        }
        
        currOdd->next = headEven;
        
        return head;
        
    }
};