class Solution {
public:
    int compareVersion(string version1, string version2) {
        version1.push_back('.');
        version2.push_back('.');
        vector<long long int> v1;
        v1 = getNumberVector(version1);
        vector<long long int> v2;
        v2 = getNumberVector(version2);
        int len1 = v1.size();
        int len2 = v2.size();
        
        if (len1 > len2){
            while( len1 != len2){
                v2.push_back(0);
                len2++;
            }
        }
        else if (len1 < len2){
            while( len1 != len2){
                v1.push_back(0);
                len1++;
            }
        }
        
        for (int i = 0; i < len1; i++){
            if (v1[i] > v2[i]) return 1;
            else if (v1[i] < v2[i]) return -1;
        }
        
        return 0;
        
    }
    
    vector<long long int> getNumberVector(string s){
        int i = 0;
        int j = 0;
        int len = s.length();
        vector<long long int> output;
        while(i < len ){
            while(s[j]!= '.') j++;
            output.push_back(strToInt(s, i, j-1));
            i = j + 1;
            j = i;
        }
        
        return output;
    }
    
    long long int strToInt(string s, int start, int end){
        while (s[start] == '0') start++;
        
        int power = end - start;
        long long int number = 0;
        while(start <= end){
            number += (s[start] - 48) * pow(10, power);
            start++;
        }
        
        return number;
        
    }
};