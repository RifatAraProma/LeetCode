/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        Node* newHead = NULL;
        Node* curr = head;
        Node* prev = NULL;
        map<Node*, Node*>nodeMap;
        int i = 0;

        while (curr != NULL){
            Node* temp = new Node(curr->val);
            nodeMap[curr] = temp;
            if (prev != NULL){
                prev->next = temp;
            }
            else{
                newHead = temp;
            }
            prev = temp;
            curr = curr->next;
        }

        curr = newHead;
        Node* currOld = head;
        while (curr != NULL){
            if (currOld->random == NULL){
                curr->random = NULL;
            }
            else{
                curr->random = nodeMap[currOld->random];    
            }
            
            curr = curr->next;
            currOld = currOld->next;
        }
        
        return newHead;
    }
};