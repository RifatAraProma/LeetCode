/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if (root == NULL) return NULL;
        
        queue<TreeNode*>bfsQ;
        bfsQ.push(root);
        
        
        while(!bfsQ.empty()){
            auto curr = bfsQ.front();
            bfsQ.pop();
            TreeNode* temp = curr->left;
            curr->left = curr->right;
            curr->right = temp;
            
            if(curr->left) bfsQ.push(curr->left);
            if(curr->right) bfsQ.push(curr->right);

        }
        
        return root;;
    }
};