/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {       
        ListNode* curr = head;
        int len = 0;
        
        while (curr != NULL){
            len++;
            curr = curr->next;
        }
        
        int mid = len / 2;
        curr = head;
        len = 0;
        
        while (len != mid){
            len++;
            curr = curr->next;
        }
        
        ListNode* rev  = reverseList(curr);
        
        curr = head;
        
        while (rev!= NULL){
            if (rev->val != curr->val){
                return false;
            }
            
            rev = rev->next;
            curr = curr->next;
        }
       
        return true;
    }
    
     ListNode* reverseList(ListNode* head) {
        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* next;
        
        while (curr != NULL){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        
        return prev;
        
    }
    
};