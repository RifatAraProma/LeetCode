class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int len = nums.size();
        if (len == 1 || nums[0] != nums[1]) return nums[0];
        if (nums[len - 2] != nums[len -1]) return nums[len - 1];
        
        int low = 0;
        int high = len - 1;
        int mid;
        
        while(low <= high){
            mid = (low + high) / 2;
            if (mid % 2 != 0){
                mid--;
            }

            if((mid - 1 >= 0 && (nums[mid] != nums[mid - 1])) && ( mid + 1 < len && (nums[mid] != nums[mid + 1])))return nums[mid];
            
            if (nums[mid] == nums[mid + 1]){
                    low = mid + 2;
            }
            else{
                high = mid - 1;
            }
            
        }
        
        return 0;
        
    }
    
};