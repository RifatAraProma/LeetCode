/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* prev = NULL;
        ListNode* curr = head;
        while (curr != NULL && curr->next != NULL){
            if (curr->val == curr->next->val){
                ListNode* temp = curr->next;
                while (temp->next != NULL){
                    if (temp->val != temp->next->val)
                        break;
                    temp = temp->next;
                }
                if (prev == NULL){
                    head = temp->next;
                }
                else{
                    prev->next = temp->next;
                }
                curr = temp->next;
            }
            else{
                prev = curr;
                curr = curr->next;
            }
            
        }
        
        return head;
    }
};